<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:mtree="http://www.mosets.com/tree/rss/">
<channel>
<title>OpenFoundry - Recently Added Listings - 程式語言</title>
<description></description>
<link>https://www.openfoundry.org/</link>
<lastBuildDate>Thu, 21 Nov 2019 23:52:03 +0100</lastBuildDate>
<generator>FeedCreator 1.7.3</generator>
<item>
	<title>ruhoh</title>
	<link>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/ruby/Web-framework/ruhoh</link>
	<description><![CDATA[繼&nbsp;<a href="https://www.openfoundry.org/en/resourcecatalog/Program-Development/Programming-Languages/ruby/Web-framework/nanoc">nanoc</a>、&nbsp;<a href="https://www.openfoundry.org/resourcecatalog/Program-Development/Programming-Languages/python/Web-framework/jemdoc">jemdoc</a>&nbsp;之後，ruhoh又是一款用來管理生成靜態網頁的工具。 ruhoh 標榜它是一個部落格平台，而且是唯一一個有語言-無關 API 的工具。它的目標族群是程式軟體開發人員，所以操作都是使用指令行 ( comment line )， 但是因為它提供很好的指令界面, 因此其實並不會很難上手。&nbsp;<br />ruhoh&nbsp;的架構是非常彈性的。透過套件的架構設計，使用者可以自己依照需求修改套件或是新編套件。從編排、編譯器到語法分析都可以依照使用者自己的喜愛編輯。而 ruhoh 所謂語言無關指的是只要透過它的規範，無論用的是什麼程式語言，都可以作出 ruhoh 套件。此外，在顧及功能面的同時， ruhoh 也試著兼顧到對網頁設計的支援。 ruhoh 能夠根據設計風格做到各個設定元素有不同命名空間的設計。]]></description>
	<author>webmaster</author>
	<pubDate>Tue, 11 Sep 2012 16:46:56 +0100</pubDate>
	<guid>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/ruby/Web-framework/ruhoh</guid>
</item>
<item>
	<title>GWT</title>
	<link>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/java/Web-framework/gwt</link>
	<description><![CDATA[GWT 是一個由 Google 所開發的開源 AJAX 網路開發框架。&nbsp; 由於許多傳統 Java 的開發人員及後端工程師，並不見得有前端工程師或網路開發者一樣的技術背景和經驗, 因此開發網站往往對他們來講有著陡峭的學習曲線。 GWT 便是為了簡化開發人員使用Java 作為橫跨前後端的技術整合及溝通之實作語言。<br /><br />GWT 將 Java 作為開發的主要語言，因而 Java 的資源都成為 GWT 開發人員可以享受的工具。 且團隊可以很輕易地找到會寫 Java 的開發者，亦可使用 Eclipse 的開發工具來實現 GWT。GWT 讓開發人員編寫 Java 代碼在透過 GWT 編譯器，把 Java 轉成高效的 JavaScript 代碼。 GWT 的內建函式庫跟其所提供的框架延展性，讓開發人員可以快速地寫成互動性強的應用程式。]]></description>
	<author>webmaster</author>
	<pubDate>Wed, 20 Jun 2012 19:46:25 +0100</pubDate>
	<guid>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/java/Web-framework/gwt</guid>
</item>
<item>
	<title>jemdoc</title>
	<link>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/python/Web-framework/jemdoc</link>
	<description><![CDATA[繼上次介紹 <a href="https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/ruby/Web-framework/nanoc">nanoc</a> 以後，筆者接續比較了多款靜態的頁面生成工具。 本次將介紹一款由 Python 實現的靜態網頁產生工具－ jemdoc。 jemdoc 是一個輕量的標記語言，專門用於表現網站的內容與排版。 jemdoc 能讀取設定檔跟選單來作更豐富的調整以符合使用者需求。 因而讓管理靜態網頁變的非常的方便跟簡易。 而相較於nanoc， jemdoc 並不是那麼的複雜，支援的功能或許也不是那麼的多，但是 jemdoc 讓學習曲線不那麼的陡峭， 它的設計非常直觀，只要適應 jemdoc 的語言跟熟悉 HTML 跟 CSS， jemdoc 並不是一個需要花很多時間學習的工具。 jemdoc 雖然很簡單，但由於有著內建支援 LaTeX 方程式表格的功能，這讓 jemdoc 的表現力大大地提升了。 jemdoc 的設計哲學就是要讓網頁生成更容易, 因此 jemdoc 產生出來的內容，可以非常輕易的發佈到伺服器上，而無需多安裝套件或煩惱相容性的問題。<br /><br /> 本文將介紹 jemdoc 的入門知識，接續帶領讀者實作一個簡易的個人網頁 ( 就如同上次用 nanoc 實作 )，透過實例輕鬆學習使用 jemdoc 的方式，協助讀者在未來可以很輕易的使用這個工具產生編輯自己的靜態網站。]]></description>
	<author>webmaster</author>
	<pubDate>Thu, 17 May 2012 10:31:33 +0100</pubDate>
	<guid>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/python/Web-framework/jemdoc</guid>
</item>
<item>
	<title>nanoc</title>
	<link>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/ruby/Web-framework/nanoc</link>
	<description><![CDATA[nanoc 是一個用 Ruby 實現的靜態網頁產生工具。 從它的官方網站，nanoc 標榜自己是一個給中到小型網站的 Ruby網頁系統。<wbr>nanoc 是一個非常彈性的工具。它讓管理靜態網頁非常的方便，而且還可以用不同的語法來編輯內容。透過不同的 Ruby工具，nanoc 可以再編譯成 HTML、CSS 格式。 因為這樣的設計，nanoc 產生出來的內容可以非常輕易的發佈到伺服器上而無需多安裝套件在伺服<wbr>器上，或煩惱相容性的問題。 </wbr></wbr>]]></description>
	<author>webmaster</author>
	<pubDate>Mon, 09 Apr 2012 23:48:24 +0100</pubDate>
	<guid>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/ruby/Web-framework/nanoc</guid>
</item>
<item>
	<title>cl-tap-producerX</title>
	<link>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/lisp/Testing/cl-tap-producerx</link>
	<description><![CDATA[<p>
<p>cl-tap-producerX is a testing framework for Common Lisp which produces reports in the TAP (Test Anything Protocol) format.</p>
<p>Platform: unknown                                        License:MIT License</p>
<p>Reference:<a href="https://cl-tap-producer.sourceforge.net/" target="_blank">https://cl-tap-producer.sourceforge.net/ </a></p>
</p>]]></description>
	<author>dio</author>
	<pubDate>Wed, 27 Oct 2010 08:07:42 +0100</pubDate>
	<guid>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/lisp/Testing/cl-tap-producerx</guid>
</item>
<item>
	<title>NUTS-Fit</title>
	<link>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/lisp/Testing/nuts-fit</link>
	<description><![CDATA[<p>
<p>A Common Lisp simple testing framework NUTS (Non-Unit Test Suite) extended with the implementation of Framework for Integrated Test (Fit, https://fit.c2.com)</p>
<p>Platform:unknown                              License:GNU General Public License (GPL)</p>
<p>Reference:<a href="https://nuts-fit.sourceforge.net/" target="_blank">https://nuts-fit.sourceforge.net/ </a></p>
</p>]]></description>
	<author>dio</author>
	<pubDate>Wed, 27 Oct 2010 08:07:17 +0100</pubDate>
	<guid>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/lisp/Testing/nuts-fit</guid>
</item>
<item>
	<title>LIFT</title>
	<link>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/lisp/Testing/lift</link>
	<description><![CDATA[<p>
<p>LIFT is the LIsp Framework for Testing. LIFT is inspired by Kent Beck\'s SUnit framework but improves on it by fully supporting Common Lisp\'s interactive nature.</p>
<p>Platform:unknown                           License:unknown</p>
<p>Reference:<a href="https://lift.sourceforge.net/" target="_blank">https://lift.sourceforge.net/ </a></p>
</p>]]></description>
	<author>dio</author>
	<pubDate>Wed, 27 Oct 2010 08:06:48 +0100</pubDate>
	<guid>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/lisp/Testing/lift</guid>
</item>
<item>
	<title>AtiL</title>
	<link>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/lisp/Testing/atil</link>
	<description><![CDATA[<p>
<p>ATiL is a automated testing framework that uniforms window application testing and web application testing in IE, Firefox, and other browsers. It includes a core library based on UI Automation, a window declaration code generator, a data-driven framework.</p>
<p>Platform: Windows(under xp)                   License:GNU General Public License (GPL)</p>
<p>Reference:<a href="https://sourceforge.net/projects/atil/" target="_blank">https://sourceforge.net/projects/atil/ </a></p>
</p>]]></description>
	<author>dio</author>
	<pubDate>Wed, 27 Oct 2010 08:06:15 +0100</pubDate>
	<guid>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/lisp/Testing/atil</guid>
</item>
<item>
	<title>LispScript</title>
	<link>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/lisp/Compiler/lispscript</link>
	<description><![CDATA[<p>
<p>LispScript is a Common Lisp program that translates Lisp programs into Javascript. It's extremely simple at the moment, but has support for basic arithmetic functions, defun, IF, macros, and LET. It currently works with CLISP.</p>
<p>Platform:unknown (portable OS)                      License:MIT License</p>
<p>Reference:<a href="https://lispscript.sourceforge.net/" target="_blank">https://lispscript.sourceforge.net/ </a></p>
</p>]]></description>
	<author>dio</author>
	<pubDate>Wed, 27 Oct 2010 08:05:44 +0100</pubDate>
	<guid>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/lisp/Compiler/lispscript</guid>
</item>
<item>
	<title>LispSharp</title>
	<link>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/lisp/Compiler/lispsharp</link>
	<description><![CDATA[<p>
<p>LispSharp is a fully compiled lisp implementation for the .NET Framework. It uses a Lisp dialect similar to ISO Lisp, it has a Command-line toplevel compiler with Read Compile Print Loop.It references any .NET DLL and produces standard .NET assembly.</p>
<p>Platform:Windows                License:GNU Library or Lesser General Public License (LGPL)</p>
<p>Reference:<a href="https://lispsharp.sourceforge.net/" target="_blank">https://lispsharp.sourceforge.net/ </a></p>
</p>]]></description>
	<author>dio</author>
	<pubDate>Wed, 27 Oct 2010 08:05:19 +0100</pubDate>
	<guid>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/lisp/Compiler/lispsharp</guid>
</item>
</channel>
</rss>
