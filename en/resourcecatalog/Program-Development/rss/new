<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:mtree="http://www.mosets.com/tree/rss/">
<channel>
<title>OpenFoundry - Recently Added Listings - 程式開發</title>
<description></description>
<link>https://www.openfoundry.org/</link>
<lastBuildDate>Thu, 21 Nov 2019 23:52:01 +0100</lastBuildDate>
<generator>FeedCreator 1.7.3</generator>
<item>
	<title>The Lemur Project</title>
	<link>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Information-Retrieval/the-lemur-project</link>
	<description><![CDATA[The Lemur Project 是一個開發搜尋引擎及文字分析的計畫，該計畫所開發的軟體能用在協助資訊檢索，與語言模型的學習與研究上。此計畫由美國麻州大學阿默斯特分校以及卡內基美隆大學合作。主要的專案內容分成四大部份：搜尋引擎、文字分析工具、網頁工具列，以及測試資料。搜尋引擎可在多種原始資料格式間進行索引跟比對，文字分析工具可用來進行文字檢索的實驗，網頁工具列能協助分析使用者習慣，包括網路上搜尋瀏覽的過程以及其他定性行為，最後，該專案也提供近十億筆的網頁測試資料，供有興趣的研究者進行資訊檢索模式方面的分析與比較。此一專案從研究與應用面來看，可轉植在資料探勘與人工智慧自動模式建立的專案上，再者，現階段的Lemur Project採拘束性質最低的BSD授權條款釋出，亦可容許使用者對其進行任何目的之改寫與加值運用。]]></description>
	<author>webmaster</author>
	<pubDate>Fri, 28 Sep 2012 10:53:51 +0100</pubDate>
	<guid>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Information-Retrieval/the-lemur-project</guid>
</item>
<item>
	<title>Weka</title>
	<link>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Machine-Learning/weka</link>
	<description><![CDATA[Weka (Waikato Environment for Knowledge Analysis)是用於資料分析、預測模型的機器學習演算法套件，包含資料前處理、分類、迴歸、叢集、關聯規則及視覺化的工具，提供圖形介面供使用者方 便操作，也適合用來開發新的機器學習規則。其由紐西蘭懷卡托大學(The University of Waikato)從1993年開始開發，在國內外學術界，在數值分析、資料探勘等領域的論文，不乏以Weka為基礎來進行分析數據模型方面的實驗。此專案 以 GNU GPL 授權釋出，從1993年至今已穩定開發至第3版，於其官方網頁上各種參與資料、建置文件，以及疑難處理的相關支援資訊豐富。相當適合被加值運用在國內與資 料分析與機器學習方面有關的研究專案，以解決此一領域日益繁重的資料量爆炸與機器系統分工化方面的需求。]]></description>
	<author>webmaster</author>
	<pubDate>Thu, 27 Sep 2012 23:29:44 +0100</pubDate>
	<guid>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Machine-Learning/weka</guid>
</item>
<item>
	<title>ruhoh</title>
	<link>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/ruby/Web-framework/ruhoh</link>
	<description><![CDATA[繼&nbsp;<a href="https://www.openfoundry.org/en/resourcecatalog/Program-Development/Programming-Languages/ruby/Web-framework/nanoc">nanoc</a>、&nbsp;<a href="https://www.openfoundry.org/resourcecatalog/Program-Development/Programming-Languages/python/Web-framework/jemdoc">jemdoc</a>&nbsp;之後，ruhoh又是一款用來管理生成靜態網頁的工具。 ruhoh 標榜它是一個部落格平台，而且是唯一一個有語言-無關 API 的工具。它的目標族群是程式軟體開發人員，所以操作都是使用指令行 ( comment line )， 但是因為它提供很好的指令界面, 因此其實並不會很難上手。&nbsp;<br />ruhoh&nbsp;的架構是非常彈性的。透過套件的架構設計，使用者可以自己依照需求修改套件或是新編套件。從編排、編譯器到語法分析都可以依照使用者自己的喜愛編輯。而 ruhoh 所謂語言無關指的是只要透過它的規範，無論用的是什麼程式語言，都可以作出 ruhoh 套件。此外，在顧及功能面的同時， ruhoh 也試著兼顧到對網頁設計的支援。 ruhoh 能夠根據設計風格做到各個設定元素有不同命名空間的設計。]]></description>
	<author>webmaster</author>
	<pubDate>Tue, 11 Sep 2012 16:46:56 +0100</pubDate>
	<guid>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/ruby/Web-framework/ruhoh</guid>
</item>
<item>
	<title>GWT</title>
	<link>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/java/Web-framework/gwt</link>
	<description><![CDATA[GWT 是一個由 Google 所開發的開源 AJAX 網路開發框架。&nbsp; 由於許多傳統 Java 的開發人員及後端工程師，並不見得有前端工程師或網路開發者一樣的技術背景和經驗, 因此開發網站往往對他們來講有著陡峭的學習曲線。 GWT 便是為了簡化開發人員使用Java 作為橫跨前後端的技術整合及溝通之實作語言。<br /><br />GWT 將 Java 作為開發的主要語言，因而 Java 的資源都成為 GWT 開發人員可以享受的工具。 且團隊可以很輕易地找到會寫 Java 的開發者，亦可使用 Eclipse 的開發工具來實現 GWT。GWT 讓開發人員編寫 Java 代碼在透過 GWT 編譯器，把 Java 轉成高效的 JavaScript 代碼。 GWT 的內建函式庫跟其所提供的框架延展性，讓開發人員可以快速地寫成互動性強的應用程式。]]></description>
	<author>webmaster</author>
	<pubDate>Wed, 20 Jun 2012 19:46:25 +0100</pubDate>
	<guid>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/java/Web-framework/gwt</guid>
</item>
<item>
	<title>jemdoc</title>
	<link>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/python/Web-framework/jemdoc</link>
	<description><![CDATA[繼上次介紹 <a href="https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/ruby/Web-framework/nanoc">nanoc</a> 以後，筆者接續比較了多款靜態的頁面生成工具。 本次將介紹一款由 Python 實現的靜態網頁產生工具－ jemdoc。 jemdoc 是一個輕量的標記語言，專門用於表現網站的內容與排版。 jemdoc 能讀取設定檔跟選單來作更豐富的調整以符合使用者需求。 因而讓管理靜態網頁變的非常的方便跟簡易。 而相較於nanoc， jemdoc 並不是那麼的複雜，支援的功能或許也不是那麼的多，但是 jemdoc 讓學習曲線不那麼的陡峭， 它的設計非常直觀，只要適應 jemdoc 的語言跟熟悉 HTML 跟 CSS， jemdoc 並不是一個需要花很多時間學習的工具。 jemdoc 雖然很簡單，但由於有著內建支援 LaTeX 方程式表格的功能，這讓 jemdoc 的表現力大大地提升了。 jemdoc 的設計哲學就是要讓網頁生成更容易, 因此 jemdoc 產生出來的內容，可以非常輕易的發佈到伺服器上，而無需多安裝套件或煩惱相容性的問題。<br /><br /> 本文將介紹 jemdoc 的入門知識，接續帶領讀者實作一個簡易的個人網頁 ( 就如同上次用 nanoc 實作 )，透過實例輕鬆學習使用 jemdoc 的方式，協助讀者在未來可以很輕易的使用這個工具產生編輯自己的靜態網站。]]></description>
	<author>webmaster</author>
	<pubDate>Thu, 17 May 2012 10:31:33 +0100</pubDate>
	<guid>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/python/Web-framework/jemdoc</guid>
</item>
<item>
	<title>nanoc</title>
	<link>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/ruby/Web-framework/nanoc</link>
	<description><![CDATA[nanoc 是一個用 Ruby 實現的靜態網頁產生工具。 從它的官方網站，nanoc 標榜自己是一個給中到小型網站的 Ruby網頁系統。<wbr>nanoc 是一個非常彈性的工具。它讓管理靜態網頁非常的方便，而且還可以用不同的語法來編輯內容。透過不同的 Ruby工具，nanoc 可以再編譯成 HTML、CSS 格式。 因為這樣的設計，nanoc 產生出來的內容可以非常輕易的發佈到伺服器上而無需多安裝套件在伺服<wbr>器上，或煩惱相容性的問題。 </wbr></wbr>]]></description>
	<author>webmaster</author>
	<pubDate>Mon, 09 Apr 2012 23:48:24 +0100</pubDate>
	<guid>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/ruby/Web-framework/nanoc</guid>
</item>
<item>
	<title>Vim</title>
	<link>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Editor/vim</link>
	<description><![CDATA[<img align="right" src="/components/com_mtree/img/listings/s/7.gif" alt="Vim" />Vim 是一款從 vi 演化而來的開源文字編輯器, 在程式人員間極為流行. 與Emacs並列為在程式設計師中與開源社群間最受歡迎的編輯器. Vim以高效率著稱, 熟練的人往往可以不用離開鍵盤就可以完成各種工作. 儘管有著非常陡峭習曲線, Vim仍舊吸引了非常多人學習. Vim 已在各種作業系統上都有實作.它甚至被許多主流作業系統綑綁為原始套件.]]></description>
	<author>webmaster</author>
	<pubDate>Sat, 12 Nov 2011 15:06:27 +0100</pubDate>
	<guid>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Editor/vim</guid>
</item>
<item>
	<title>C++ coding standard</title>
	<link>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Coding-Standards/c-coding-standard</link>
	<description><![CDATA[這個文件在經歷不同的專案以及公司後逐步發展，在數以周計的時間討論這些規範而逐漸完整 。 這不是某一個人的編程風格，也絕對開放於任何適性的修正。]]></description>
	<author>webmaster</author>
	<pubDate>Mon, 15 Aug 2011 10:08:40 +0100</pubDate>
	<guid>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Coding-Standards/c-coding-standard</guid>
</item>
<item>
	<title>Google Objective-C Style Guide</title>
	<link>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Coding-Standards/google-objective-c-style-guide</link>
	<description><![CDATA[這份文件的目的是描述 Objective-C (和Objective-C++) 被應用在所有Mac OS X 代碼的開發準則與慣例。許多的準則已經經過許多專案和團隊的實用並進化。 Google的開源專案都遵守這份文件的規則。]]></description>
	<author>webmaster</author>
	<pubDate>Mon, 15 Aug 2011 10:06:00 +0100</pubDate>
	<guid>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Coding-Standards/google-objective-c-style-guide</guid>
</item>
<item>
	<title>Google Python Style Guide</title>
	<link>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Coding-Standards/google-python-style-guide</link>
	<description><![CDATA[Python是Google的主要腳本語言. 這份風格指南提供一份 “可做” 跟 “不可做”的清單.]]></description>
	<author>webmaster</author>
	<pubDate>Mon, 15 Aug 2011 02:06:16 +0100</pubDate>
	<guid>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Coding-Standards/google-python-style-guide</guid>
</item>
</channel>
</rss>
