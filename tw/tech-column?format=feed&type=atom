<?xml version="1.0" encoding="utf-8"?>
<!-- generator="" -->
<?xml-stylesheet href="/components/com_jcomments/tpl/default/style.css?v=10" type="text/css"?>
<feed xmlns="http://www.w3.org/2005/Atom"  xml:lang="zh-tw">
	<title type="text">技術專欄</title>
	<subtitle type="text">OpenFoundry provides essential tools and services through its service platform for users to develop Open Source Software Projects, the operating funds comes from the National Science Council and the Research Center for Information Technology Innovation of Academia Sinica Taiwan.</subtitle>
	<link rel="alternate" type="text/html" href="https://www.openfoundry.org"/>
	<id>https://www.openfoundry.org/tech-column</id>
	<updated>2019-11-21T15:43:23Z</updated>
	<generator uri="http://joomla.org" version="1.5"></generator>
<link rel="self" type="application/atom+xml" href="https://www.openfoundry.org/tw/tech-column?format=feed&amp;type=atom" />
	<entry>
		<title>第一次用 PHPUnit 寫測試就上手（下）</title>
		<link rel="alternate" type="text/html" href="https://www.openfoundry.org/tw/tech-column/9328-phpunit-testing-ii"/>
		<published>2014-12-29T08:32:32Z</published>
		<updated>2014-12-29T08:32:32Z</updated>
		<id>https://www.openfoundry.org/tw/tech-column/9328-phpunit-testing-ii</id>
		<author>
			<name>黃儀銘／文</name>
		<email>ossfepaper@gmail.com</email>
		</author>
		<summary type="html">&lt;h3&gt;上篇文章：&lt;a href=&quot;https://www.openfoundry.org/tw/tech-column/9326-phpunit-testing&quot; target=&quot;_blank&quot;&gt;第一次用 PHPUnit 寫測試就上手（上）&lt;/a&gt;&lt;/h3&gt;
&lt;h4 id=&quot;3-data-providers資料提供者&quot;&gt;3. Data Providers（資料提供者）&lt;/h4&gt;
&lt;p&gt;資料提供者，能提供多筆的測試資料給測試案例進行多次的測試。&lt;/p&gt;
&lt;p&gt;使用資料提供者，能讓測試更簡潔，因為，可以將測試的 assertions 與測試資料分開寫。&lt;/p&gt;
</summary>
		<content type="html">&lt;h3&gt;上篇文章：&lt;a href=&quot;https://www.openfoundry.org/tw/tech-column/9326-phpunit-testing&quot; target=&quot;_blank&quot;&gt;第一次用 PHPUnit 寫測試就上手（上）&lt;/a&gt;&lt;/h3&gt;
&lt;h4 id=&quot;3-data-providers資料提供者&quot;&gt;3. Data Providers（資料提供者）&lt;/h4&gt;
&lt;p&gt;資料提供者，能提供多筆的測試資料給測試案例進行多次的測試。&lt;/p&gt;
&lt;p&gt;使用資料提供者，能讓測試更簡潔，因為，可以將測試的 assertions 與測試資料分開寫。&lt;/p&gt;
</content>
	</entry>
	<entry>
		<title>第一次用 PHPUnit 寫測試就上手（上）</title>
		<link rel="alternate" type="text/html" href="https://www.openfoundry.org/tw/tech-column/9326-phpunit-testing-i"/>
		<published>2014-12-29T07:19:38Z</published>
		<updated>2014-12-29T07:19:38Z</updated>
		<id>https://www.openfoundry.org/tw/tech-column/9326-phpunit-testing-i</id>
		<author>
			<name>黃儀銘／文</name>
		<email>ossfepaper@gmail.com</email>
		</author>
		<summary type="html">&lt;h3 id=&quot;一什麼是測試測試的重要性&quot;&gt;一、什麼是測試？測試的重要性？&lt;/h3&gt;
&lt;p&gt;開發者在撰寫程式的時候，程式不大可能會沒有問題，所以通常就需要驗證程式的執行是不是符合預期。測試程式能用來驗證程式程式的運作是不是正常的，並發現程式中的錯誤，以增加軟體品質。&lt;/p&gt;
&lt;p&gt;下面是一個活動報名的系統：&lt;/p&gt;
</summary>
		<content type="html">&lt;h3 id=&quot;一什麼是測試測試的重要性&quot;&gt;一、什麼是測試？測試的重要性？&lt;/h3&gt;
&lt;p&gt;開發者在撰寫程式的時候，程式不大可能會沒有問題，所以通常就需要驗證程式的執行是不是符合預期。測試程式能用來驗證程式程式的運作是不是正常的，並發現程式中的錯誤，以增加軟體品質。&lt;/p&gt;
&lt;p&gt;下面是一個活動報名的系統：&lt;/p&gt;
</content>
	</entry>
	<entry>
		<title>Docker 實作入門</title>
		<link rel="alternate" type="text/html" href="https://www.openfoundry.org/tw/tech-column/9319-docker-101"/>
		<published>2014-12-05T01:46:53Z</published>
		<updated>2014-12-05T01:46:53Z</updated>
		<id>https://www.openfoundry.org/tw/tech-column/9319-docker-101</id>
		<author>
			<name>黃儀銘</name>
		<email>contact@openfoundry.org</email>
		</author>
		<summary type="html">&lt;h3 id=&quot;-&quot;&gt;目的&lt;/h3&gt;
&lt;p&gt;主要介紹 Docker 的實作，會提到以下幾個部分：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;建立 Docker container&lt;/li&gt;
&lt;li&gt;管理 Docker 上的 container&lt;/li&gt;
&lt;li&gt;下載 image 、commit 建立新的 image&lt;/li&gt;
&lt;li&gt;經由撰寫 Dockerfile 來自動建立新的 image&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在進入實作前，會簡單介紹 Docker 與虛擬化的差異、Docker 上的重要元件，接下來準備的部分會需要安裝 Docker 及先登入 Docker Hub。&lt;/p&gt;
</summary>
		<content type="html">&lt;h3 id=&quot;-&quot;&gt;目的&lt;/h3&gt;
&lt;p&gt;主要介紹 Docker 的實作，會提到以下幾個部分：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;建立 Docker container&lt;/li&gt;
&lt;li&gt;管理 Docker 上的 container&lt;/li&gt;
&lt;li&gt;下載 image 、commit 建立新的 image&lt;/li&gt;
&lt;li&gt;經由撰寫 Dockerfile 來自動建立新的 image&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在進入實作前，會簡單介紹 Docker 與虛擬化的差異、Docker 上的重要元件，接下來準備的部分會需要安裝 Docker 及先登入 Docker Hub。&lt;/p&gt;
</content>
	</entry>
	<entry>
		<title>運用 Go 語言做 EMR 串流</title>
		<link rel="alternate" type="text/html" href="https://www.openfoundry.org/tw/tech-column/9289-go-emr-stream"/>
		<published>2014-09-16T03:17:30Z</published>
		<updated>2014-09-16T03:17:30Z</updated>
		<id>https://www.openfoundry.org/tw/tech-column/9289-go-emr-stream</id>
		<author>
			<name>謝良奇／翻譯</name>
		<email>viirya@gmail.com</email>
		</author>
		<summary type="html">&lt;p&gt;&lt;strong&gt;本文翻譯自 NY Times，原作者為 JP Robinson：&lt;a href=&quot;https://open.blogs.nytimes.com/2014/07/10/emr-streaming-in-go/?_php=true&amp;_type=blogs&amp;_php=true&amp;_type=blogs&amp;_r=1&quot;&gt;https://open.blogs.nytimes.com/2014/07/10/emr-streaming-in-go/?_php=true&amp;_type=blogs&amp;_php=true&amp;_type=blogs&amp;_r=1&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我們的平台團隊使用 Amazon 的 Elastic MapReduce (EMR) 服務，協助我們從日誌檔收集有用的數據。我們有一些程序會抓取日誌檔，接著壓縮並推送到 Amazon S3 上儲存。感謝 EMR，這套模式聚集出回溯數年之久的龐大資訊，等待我們進行資料重整 (data crunching)。一開始我們用 Python 做了不少苦功，不過我們漸漸地轉而依賴 Go。&lt;/p&gt;
</summary>
		<content type="html">&lt;p&gt;&lt;strong&gt;本文翻譯自 NY Times，原作者為 JP Robinson：&lt;a href=&quot;https://open.blogs.nytimes.com/2014/07/10/emr-streaming-in-go/?_php=true&amp;_type=blogs&amp;_php=true&amp;_type=blogs&amp;_r=1&quot;&gt;https://open.blogs.nytimes.com/2014/07/10/emr-streaming-in-go/?_php=true&amp;_type=blogs&amp;_php=true&amp;_type=blogs&amp;_r=1&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我們的平台團隊使用 Amazon 的 Elastic MapReduce (EMR) 服務，協助我們從日誌檔收集有用的數據。我們有一些程序會抓取日誌檔，接著壓縮並推送到 Amazon S3 上儲存。感謝 EMR，這套模式聚集出回溯數年之久的龐大資訊，等待我們進行資料重整 (data crunching)。一開始我們用 Python 做了不少苦功，不過我們漸漸地轉而依賴 Go。&lt;/p&gt;
</content>
	</entry>
	<entry>
		<title>LiveReload - 網頁開發者必備的自動重新整理外掛</title>
		<link rel="alternate" type="text/html" href="https://www.openfoundry.org/tw/tech-column/9240-livereload-"/>
		<published>2014-06-09T02:23:06Z</published>
		<updated>2014-06-09T02:23:06Z</updated>
		<id>https://www.openfoundry.org/tw/tech-column/9240-livereload-</id>
		<author>
			<name>凍仁翔</name>
		<email>jonny@drx.tw</email>
		</author>
		<summary type="html">&lt;p&gt;網頁開發者 (Web Developer) 一天會在瀏覽器 (browser) 裡重新整理 (refresh) 個千百次是常有的事，但這樣不只會造成開發上的中斷，也會加重雙手的負擔。&lt;/p&gt;
&lt;p&gt;這裡凍仁將介紹 LiveReload 給大家，&lt;strong&gt;它是個可以在儲存檔案後自動重新整理 browser 的解決方案&lt;/strong&gt;，LiveReload 雖然不能即時呈現，但可以讓開發環境變得友善點，是值得投資的好工具，若能搭配雙螢幕使用其效果更佳。&lt;/p&gt;
&lt;p&gt;(註：本文的撰寫環境是以 Ubuntu 12.04 為主，若版本不同可能會有些許的不同。)&lt;/p&gt;

</summary>
		<content type="html">&lt;p&gt;網頁開發者 (Web Developer) 一天會在瀏覽器 (browser) 裡重新整理 (refresh) 個千百次是常有的事，但這樣不只會造成開發上的中斷，也會加重雙手的負擔。&lt;/p&gt;
&lt;p&gt;這裡凍仁將介紹 LiveReload 給大家，&lt;strong&gt;它是個可以在儲存檔案後自動重新整理 browser 的解決方案&lt;/strong&gt;，LiveReload 雖然不能即時呈現，但可以讓開發環境變得友善點，是值得投資的好工具，若能搭配雙螢幕使用其效果更佳。&lt;/p&gt;
&lt;p&gt;(註：本文的撰寫環境是以 Ubuntu 12.04 為主，若版本不同可能會有些許的不同。)&lt;/p&gt;

</content>
	</entry>
	<entry>
		<title>CSS3 動畫基礎</title>
		<link rel="alternate" type="text/html" href="https://www.openfoundry.org/tw/tech-column/9233-css3-animation"/>
		<published>2014-05-23T04:00:57Z</published>
		<updated>2014-05-23T04:00:57Z</updated>
		<id>https://www.openfoundry.org/tw/tech-column/9233-css3-animation</id>
		<author>
			<name>Jace Ju</name>
		<email>jaceju@gmail.com</email>
		</author>
		<summary type="html">&lt;p&gt;在 JSConf.Asia 2013 ， Lea Verou 介紹了 &lt;a target=&quot;_blank&quot; href=&quot;https://lea.verou.me/css-4d/#intro&quot;&gt;CSS in the 4th dimension&lt;/a&gt; (&lt;a target=&quot;_blank&quot; href=&quot;https://www.youtube.com/watch?v=NTJUFQmHbvc&quot;&gt;影片&lt;/a&gt;) ，引發了整個 Web 界對 CSS 動畫的期盼；在 &lt;a target=&quot;_blank&quot; href=&quot;https://www.ruanyifeng.com/blog/2014/02/css_transition_and_animation.html&quot;&gt;CSS動畫簡介&lt;/a&gt;一文也已經把重點整理好了。&lt;/p&gt;
&lt;p&gt;以下我們將會介紹主要兩個 CSS3 在動畫的屬性： Transition 與 Animation ，並配合實例來練習這些技術，後面我也會介紹一些不錯的相關開發工具。&lt;/p&gt;
</summary>
		<content type="html">&lt;p&gt;在 JSConf.Asia 2013 ， Lea Verou 介紹了 &lt;a target=&quot;_blank&quot; href=&quot;https://lea.verou.me/css-4d/#intro&quot;&gt;CSS in the 4th dimension&lt;/a&gt; (&lt;a target=&quot;_blank&quot; href=&quot;https://www.youtube.com/watch?v=NTJUFQmHbvc&quot;&gt;影片&lt;/a&gt;) ，引發了整個 Web 界對 CSS 動畫的期盼；在 &lt;a target=&quot;_blank&quot; href=&quot;https://www.ruanyifeng.com/blog/2014/02/css_transition_and_animation.html&quot;&gt;CSS動畫簡介&lt;/a&gt;一文也已經把重點整理好了。&lt;/p&gt;
&lt;p&gt;以下我們將會介紹主要兩個 CSS3 在動畫的屬性： Transition 與 Animation ，並配合實例來練習這些技術，後面我也會介紹一些不錯的相關開發工具。&lt;/p&gt;
</content>
	</entry>
	<entry>
		<title>Code Review 指引</title>
		<link rel="alternate" type="text/html" href="https://www.openfoundry.org/tw/tech-column/9225-code-review-"/>
		<published>2014-05-13T01:53:45Z</published>
		<updated>2014-05-13T01:53:45Z</updated>
		<id>https://www.openfoundry.org/tw/tech-column/9225-code-review-</id>
		<author>
			<name>Joey Chen (91)</name>
		<email>ossfepaper@gmail.com</email>
		</author>
		<summary type="html">&lt;h3&gt;為什麼需要 Code Review&lt;/h3&gt;
&lt;p&gt;要瞭解為什麼需要 code review 之前，先透過下面這張圖解釋，隨著軟體開發週期越後面的階段或經歷的時間越長，軟體修復 bug 的成本越高。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;01&quot; src=&quot;https://www.openfoundry.org/images/140513/01.jpg&quot; height=&quot;263&quot; width=&quot;498&quot; /&gt;&lt;/p&gt;
&lt;p&gt;▲圖 1 軟體修復成本與時間關係（資料來源：&lt;a target=&quot;_blank&quot; href=&quot;https://buildsecurityin.us-cert.gov/articles/best-practices/security-testing/risk-based-and-functional-security-testing&quot;&gt;https://buildsecurityin.us-cert.gov/articles/best-practices/security-testing/risk-based-and-functional-security-testing&lt;/a&gt;）&lt;/p&gt;
</summary>
		<content type="html">&lt;h3&gt;為什麼需要 Code Review&lt;/h3&gt;
&lt;p&gt;要瞭解為什麼需要 code review 之前，先透過下面這張圖解釋，隨著軟體開發週期越後面的階段或經歷的時間越長，軟體修復 bug 的成本越高。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;01&quot; src=&quot;https://www.openfoundry.org/images/140513/01.jpg&quot; height=&quot;263&quot; width=&quot;498&quot; /&gt;&lt;/p&gt;
&lt;p&gt;▲圖 1 軟體修復成本與時間關係（資料來源：&lt;a target=&quot;_blank&quot; href=&quot;https://buildsecurityin.us-cert.gov/articles/best-practices/security-testing/risk-based-and-functional-security-testing&quot;&gt;https://buildsecurityin.us-cert.gov/articles/best-practices/security-testing/risk-based-and-functional-security-testing&lt;/a&gt;）&lt;/p&gt;
</content>
	</entry>
	<entry>
		<title>PHP log 的勝利與挑戰</title>
		<link rel="alternate" type="text/html" href="https://www.openfoundry.org/tw/tech-column/9223-php-log-"/>
		<published>2014-05-07T01:53:57Z</published>
		<updated>2014-05-07T01:53:57Z</updated>
		<id>https://www.openfoundry.org/tw/tech-column/9223-php-log-</id>
		<author>
			<name>謝良奇／翻譯</name>
		<email>viirya@gmail.com</email>
		</author>
		<summary type="html">&lt;p&gt;◎本文翻譯自 The NewYork Times，原作者為 Jonathan Marballi︰&lt;br /&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://open.blogs.nytimes.com/2014/03/25/the-triumphs-and-challenges-of-logging-in-php-and-really-most-languages-probably/&quot;&gt;https://open.blogs.nytimes.com/2014/03/25/the-triumphs-and-challenges-of-logging-in-php-and-really-most-languages-probably/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;當你的網站出現問題，從 system logs 作為排除故障的起點，是不錯的選擇。伺服器出錯了嗎？檢查 log。網頁看起來不對勁或有亂碼？檢查 log。在重新設計紐約時報網站過程中，我們趁此機會為後端 PHP 框架，開發出輕量級、彈性好用的 log 類別。&lt;/p&gt;
&lt;p&gt;我們決定利用開源程式庫，考量過一些選擇後，我們採納了 Symfony 的 Monolog logger。我們也考量過 KLogger 與 Analog 這兩套受歡迎的 log 程式庫，但是發現它們不符合我們的所有需求。KLogger 對輸出到檔案的 log 而言很棒，但缺乏將 log 輸出到其他管道的彈性。Analog 相當輕量而簡單，但是因為採用了靜態架構，難以在我們的單元測試中進行模似 (mock in)。Symfony 的 log 似乎是最輕量、最富彈性與延展性的。&lt;/p&gt;
</summary>
		<content type="html">&lt;p&gt;◎本文翻譯自 The NewYork Times，原作者為 Jonathan Marballi︰&lt;br /&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://open.blogs.nytimes.com/2014/03/25/the-triumphs-and-challenges-of-logging-in-php-and-really-most-languages-probably/&quot;&gt;https://open.blogs.nytimes.com/2014/03/25/the-triumphs-and-challenges-of-logging-in-php-and-really-most-languages-probably/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;當你的網站出現問題，從 system logs 作為排除故障的起點，是不錯的選擇。伺服器出錯了嗎？檢查 log。網頁看起來不對勁或有亂碼？檢查 log。在重新設計紐約時報網站過程中，我們趁此機會為後端 PHP 框架，開發出輕量級、彈性好用的 log 類別。&lt;/p&gt;
&lt;p&gt;我們決定利用開源程式庫，考量過一些選擇後，我們採納了 Symfony 的 Monolog logger。我們也考量過 KLogger 與 Analog 這兩套受歡迎的 log 程式庫，但是發現它們不符合我們的所有需求。KLogger 對輸出到檔案的 log 而言很棒，但缺乏將 log 輸出到其他管道的彈性。Analog 相當輕量而簡單，但是因為採用了靜態架構，難以在我們的單元測試中進行模似 (mock in)。Symfony 的 log 似乎是最輕量、最富彈性與延展性的。&lt;/p&gt;
</content>
	</entry>
	<entry>
		<title>AngularJS 指令</title>
		<link rel="alternate" type="text/html" href="https://www.openfoundry.org/tw/tech-column/9216-angularjs-2"/>
		<published>2014-04-29T02:17:01Z</published>
		<updated>2014-04-29T02:17:01Z</updated>
		<id>https://www.openfoundry.org/tw/tech-column/9216-angularjs-2</id>
		<author>
			<name>Circle</name>
		<email>ossfepaper@gmail.com</email>
		</author>
		<summary type="html">&lt;h3&gt;第二回我們接著要了解 AngularJS 的入門指令，Code 的作用。例如：&lt;/h3&gt;
&lt;br /&gt;
&lt;h4&gt;1、新增宣告語法 ng-app ：&lt;/h4&gt;
&lt;p&gt;宣告應用程式作用域（Application Scope），在 Document Object Model（DOM）載入後，AngularJS 就會開始尋找 &lt;code&gt;ng-app&lt;/code&gt; 這個字，找到的話，就會把這頁面當成是 AngularJS 應用程式。&lt;/p&gt;
&lt;p&gt;（1）宣告方式：&lt;strong&gt;一份 HTML 只能宣告一個應用程式作用域（ng-app）&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;＜html ng-app＞&lt;/pre&gt;
&lt;pre&gt;＜html ng-app=&quot;appName&quot;＞&lt;/pre&gt;
</summary>
		<content type="html">&lt;h3&gt;第二回我們接著要了解 AngularJS 的入門指令，Code 的作用。例如：&lt;/h3&gt;
&lt;br /&gt;
&lt;h4&gt;1、新增宣告語法 ng-app ：&lt;/h4&gt;
&lt;p&gt;宣告應用程式作用域（Application Scope），在 Document Object Model（DOM）載入後，AngularJS 就會開始尋找 &lt;code&gt;ng-app&lt;/code&gt; 這個字，找到的話，就會把這頁面當成是 AngularJS 應用程式。&lt;/p&gt;
&lt;p&gt;（1）宣告方式：&lt;strong&gt;一份 HTML 只能宣告一個應用程式作用域（ng-app）&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;＜html ng-app＞&lt;/pre&gt;
&lt;pre&gt;＜html ng-app=&quot;appName&quot;＞&lt;/pre&gt;
</content>
	</entry>
	<entry>
		<title>AngularJS 簡介</title>
		<link rel="alternate" type="text/html" href="https://www.openfoundry.org/tw/tech-column/9208-angularjs-1"/>
		<published>2014-04-14T06:32:46Z</published>
		<updated>2014-04-14T06:32:46Z</updated>
		<id>https://www.openfoundry.org/tw/tech-column/9208-angularjs-1</id>
		<author>
			<name>Circle</name>
		<email>ossfepaper@gmail.com</email>
		</author>
		<summary type="html">&lt;h3&gt;甚麼是 AngularJS？&lt;/h3&gt;
&lt;p&gt;AngularJS 是一個使用 HTML、JavaScript 和 CSS 來建立 Web 應用程式的框架（Framework），其由 Google 所創建，用來協助單一頁面應用程式的運行。&lt;/p&gt;
&lt;p&gt;它可以擴展應用程式中的 HTML 詞彙，從而在 Web 應用程式中使用 HTML 聲明動態內容，並擴展 HTML 的語法，以便清晰、簡潔地表示應用程式中的組件，並允許將標準的 HTML 作為你的模板語言（Template Language）。&lt;/p&gt;
</summary>
		<content type="html">&lt;h3&gt;甚麼是 AngularJS？&lt;/h3&gt;
&lt;p&gt;AngularJS 是一個使用 HTML、JavaScript 和 CSS 來建立 Web 應用程式的框架（Framework），其由 Google 所創建，用來協助單一頁面應用程式的運行。&lt;/p&gt;
&lt;p&gt;它可以擴展應用程式中的 HTML 詞彙，從而在 Web 應用程式中使用 HTML 聲明動態內容，並擴展 HTML 的語法，以便清晰、簡潔地表示應用程式中的組件，並允許將標準的 HTML 作為你的模板語言（Template Language）。&lt;/p&gt;
</content>
	</entry>
</feed>
