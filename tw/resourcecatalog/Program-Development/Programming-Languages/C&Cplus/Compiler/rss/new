<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:mtree="http://www.mosets.com/tree/rss/">
<channel>
<title>OpenFoundry - Recently Added Listings - 編譯器</title>
<description></description>
<link>https://www.openfoundry.org/</link>
<lastBuildDate>Fri, 22 Nov 2019 08:40:50 +0100</lastBuildDate>
<generator>FeedCreator 1.7.3</generator>
<item>
	<title>Tiny C Compiler</title>
	<link>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/C&amp;amp;Cplus/Compiler/tiny-c-compiler</link>
	<description><![CDATA[<p>
<p>Features:</p>
<p>You can compile and execute C code everywhere, for example on rescue disks (about 100KB for x86 TCC executable, including C preprocessor, C compiler, assembler and linker).</p>
<p>tcc generates x86 code. No byte code overhead. Compile, assemble and link several times faster than GCC.</p>
<p>Any C dynamic library can be used directly. TCC is heading torward full ISOC99compliance. TCC can of course compile itself.</p>
<p>tcc includes an optional memory and bound checker. Bound checked code can be mixed freely with standard code.</p>
<p>Compile and execute C source directly. No linking or assembly necessary. Full C preprocessor and GNU-like assembler included.</p>
<p>C script supported : just add '#!/usr/local/bin/tcc -run'at the first line of your C source, and execute it directly from the command line.</p>
<p>With libtcc, you can use TCC as a backend for dynamic code generation.</p>
<p>Platform:Windows                                                                    License:GNU</p>
<p>Reference:<a href="https://bellard.org/tcc/" target="_blank">https://bellard.org/tcc/ </a></p>
</p>]]></description>
	<author>dio</author>
	<pubDate>Wed, 13 Oct 2010 08:20:02 +0100</pubDate>
	<guid>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/C&amp;amp;Cplus/Compiler/tiny-c-compiler</guid>
</item>
<item>
	<title>Digital Mars C/C++ Compiler</title>
	<link>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/C&amp;amp;Cplus/Compiler/digital-mars-cc-compiler</link>
	<description><![CDATA[<p>
<p>Features:</p>
<p>C and C++ compilers</p>
<p>Support forWin32, Win16, DOS16 and DOS32 all in one package.</p>
<p>Integrated development and debugging environment (IDDE).</p>
<p>Documentation in browsable HTML format.</p>
<p>Tutorials and sample code.</p>
<p>Extensive set of related tools like resource compiler, object disassembler, librarian, resource editors, make, etc.</p>
<p>Complete library source, including floating point.</p>
<p>Command line versions as well as GUI versions of tools.</p>
<p>Platform:Windows                                                                    License:unknown</p>
<p>Reference:<a href="https://www.digitalmars.com/download/freecompiler.html" target="_blank">https://www.digitalmars.com/download/freecompiler.html</a></p>
</p>]]></description>
	<author>dio</author>
	<pubDate>Wed, 13 Oct 2010 08:19:31 +0100</pubDate>
	<guid>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/C&amp;amp;Cplus/Compiler/digital-mars-cc-compiler</guid>
</item>
<item>
	<title>Pelles C</title>
	<link>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/C&amp;amp;Cplus/Compiler/pelles-c</link>
	<description><![CDATA[<p>
<p>Pelles C is a complete development kit for Windows and Windows Mobile. It contains among other things an optimizing C compiler, a macro assembler, a linker, a resource compiler, a message compiler, a make utility and install builders for both Windows and Windows Mobile.</p>
<p>Platform:Windows                                                                    License:unknown</p>
<p>Reference:<a href="https://www.smorgasbordet.com/pellesc/" target="_blank">https://www.smorgasbordet.com/pellesc/ </a></p>
</p>]]></description>
	<author>dio</author>
	<pubDate>Wed, 13 Oct 2010 08:19:05 +0100</pubDate>
	<guid>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/C&amp;amp;Cplus/Compiler/pelles-c</guid>
</item>
<item>
	<title>MPW - Macintosh Programmer's Workshop</title>
	<link>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/C&amp;amp;Cplus/Compiler/mpw-macintosh-programmers-workshop</link>
	<description><![CDATA[<p>
<p>Macintosh Programmer's Workshop (MPW) is a product designed specifically for professional Macintosh software developers. It brings together a comprehensive collection of development tools designed to support C, C++, and assembly-language programmers who are writing software for Mac OS 7.x/8.x/9.x. MPW is an open, configurable, and scriptable development environment which provides the flexibility to support complex software development projects for 68K and Power Macintosh systems.</p>
<p>Platform:Mac                                                                License:unknown</p>
<p>Reference:<a href="https://developer.apple.com/tools/mpw-tools/" target="_blank">https://developer.apple.com/tools/mpw-tools/ </a></p>
</p>]]></description>
	<author>dio</author>
	<pubDate>Wed, 13 Oct 2010 08:18:36 +0100</pubDate>
	<guid>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/C&amp;amp;Cplus/Compiler/mpw-macintosh-programmers-workshop</guid>
</item>
<item>
	<title>CC386</title>
	<link>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/C&amp;amp;Cplus/Compiler/cc386</link>
	<description><![CDATA[<p>
<p>CC386 is a general-purpose 32-bit C compiler. It is not an optimizing compiler but given that the code generation is fairly good. There are two versions; one is for MSDOS/DPMI and one is for Win32. The Win32 version has a full-blown IDE capable of editing, building, and debugging windows programs included with it. However at this time debugging support for MSDOS is rudimentary at best and there is no IDE for DOS.</p>
<p>Platform:Windows                                                                    License:unknown</p>
<p>Reference:<a href="https://www.members.tripod.com/~ladsoft/cc386.htm" target="_blank">https://www.members.tripod.com/~ladsoft/cc386.htm </a></p>
</p>]]></description>
	<author>dio</author>
	<pubDate>Wed, 13 Oct 2010 08:17:56 +0100</pubDate>
	<guid>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/C&amp;amp;Cplus/Compiler/cc386</guid>
</item>
<item>
	<title>Borland C++ Compiler</title>
	<link>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/C&amp;amp;Cplus/Compiler/borland-c-compiler</link>
	<description><![CDATA[<p>
<p>The Borland C++ Compiler (BCC) is the foundation and core technology of C++Builder 5. Borland C++ Compiler 5.5 is a blazingly fast 32-bit optimizing compiler. It includes the latest ANSI/ISO C++ language support including, the STL (Standard Template Library) framework and C++ template support and the complete Borland C/C++ Runtime Library (RTL). Also included in the free download are the Borland C/C++ command line tools such as the high performance Borland linker and resource compiler.</p>
<p>Platform:Cross platform                                                                    License:unknown</p>
<p>Reference:<a href="https://edn.embarcadero.com/article/20633" target="_blank">https://edn.embarcadero.com/article/20633 </a></p>
</p>]]></description>
	<author>dio</author>
	<pubDate>Wed, 13 Oct 2010 08:17:07 +0100</pubDate>
	<guid>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/C&amp;amp;Cplus/Compiler/borland-c-compiler</guid>
</item>
</channel>
</rss>
