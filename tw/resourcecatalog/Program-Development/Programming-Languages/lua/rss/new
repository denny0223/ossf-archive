<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:mtree="http://www.mosets.com/tree/rss/">
<channel>
<title>OpenFoundry - Recently Added Listings - Lua</title>
<description></description>
<link>https://www.openfoundry.org/</link>
<lastBuildDate>Fri, 22 Nov 2019 02:15:11 +0100</lastBuildDate>
<generator>FeedCreator 1.7.3</generator>
<item>
	<title>Lua</title>
	<link>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/lua/Introduction/lua</link>
	<description><![CDATA[<p>
<p>Lua是一種輕量語言，它的官方版本只包括一個精簡的核心和最基本的API。這使得Lua體積小、啟動速度快。它用標準C語言編寫並以原始碼形式開放，編譯後僅僅一百多KB，可以很方便的嵌入別的程式裡。和許多"大而全"的語言不一樣，網路通訊、圖形界面等都沒有預設提供。但是Lua可以很容易地被擴展：由宿主語言（通常是C或C++）提供這些功能，Lua可以使用它們，就像是本來就內置的功能一樣。事實上，現在已經有很多成熟的擴展模塊可供選用。</p>
<p>Lua是一種多重編程範式的程式設計語言：它只提供了很小的一個特性集合來滿足不同編輯範式的需要，而不是為某種特定的編輯範式提供繁雜的特性支援。例如，Lua並不提供繼承這個特性，但是你可以用元表來模擬它。諸如名字空間、類這些概念都沒有在語言基本特性中實現，但是我們可以輕易的用表結構（Lua唯一提供的複雜資料結構）輕易模擬。Lua可以在運行時隨時構造出一個函數，並把它看作一個對象（正是所謂的first class function），這個特性可以很好的滿足函數式編程的需要。這是提供了這些基本的元特性，我們可以任意的對語言進行自需的改造。</p>
<p>Lua原生支援的資料型別非常之少，它只提供了 Integer（預設是雙精度浮點數，可配置）、Boolean、String、、子程序、coroutine以及用戶自定義類型這幾種。但是其處理Byte的效率非常之高，加上元表的支援，我們可以高效的模擬出需要的複雜資料類型（比如集合、數組等）。</p>
<p>Lua是一個動態弱類型語言，支援增量式垃圾收集策略。有內建的，與作業系統無關的協作式多執行緒（coroutine）支援。</p>
<p>平台:跨平台<span style="white-space: pre;"> </span>原始碼授權類型:MIT License</p>
<p>資料來源:<a href="https://zh.wikipedia.org/zh-tw/Lua" target="_blank">https://zh.wikipedia.org/zh-tw/Lua</a></p>
</p>]]></description>
	<author>dio</author>
	<pubDate>Sat, 18 Sep 2010 01:42:53 +0100</pubDate>
	<guid>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/lua/Introduction/lua</guid>
</item>
<item>
	<title>TestMore</title>
	<link>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/lua/Testing%20/testmore</link>
	<description><![CDATA[<p>
<p>lua-TestMore 是一個由 Perl5 module Test::More 移植過來的單元測試框架。</p>
<p>平台: OS Indenpendent; 原始碼授權類型: MIT/X Consortium License</p>
<p>資料來源:<a href="https://luaforge.net/projects/testmore/" target="_blank"> https://luaforge.net/projects/testmore/</a></p>
</p>]]></description>
	<author>dio</author>
	<pubDate>Fri, 17 Sep 2010 02:16:47 +0100</pubDate>
	<guid>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/lua/Testing%20/testmore</guid>
</item>
<item>
	<title>Luaunit</title>
	<link>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/lua/Testing%20/luaunit</link>
	<description><![CDATA[<p>
<p>LuaUnit 是一個依據 Python unit testing framework 撰寫的單元測試框架。</p>
<p>平台: OS Independent; 原始碼授權類型: Public Domain</p>
<p>資料來源: <a href="https://phil.freehackers.org/programs/luaunit/" target="_blank">https://phil.freehackers.org/programs/luaunit/</a></p>
</p>]]></description>
	<author>dio</author>
	<pubDate>Fri, 17 Sep 2010 02:15:52 +0100</pubDate>
	<guid>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/lua/Testing%20/luaunit</guid>
</item>
<item>
	<title>lunit</title>
	<link>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/lua/Testing%20/lunit</link>
	<description><![CDATA[<p>
<p>lunit 是一個以 Lua 撰寫的單元測試框架，它現在提供 27 種 assert functions、8 種 type checking functiosn 以及一些其他的 functions 用於使用簡單的單元測試框架。</p>
<p>平台:  OS Independent; 原始碼授權類型: MIT License</p>
<p>資料來源: <a href="https://www.nessie.de/mroth/lunit/" target="_blank">https://www.nessie.de/mroth/lunit/</a></p>
</p>]]></description>
	<author>dio</author>
	<pubDate>Fri, 17 Sep 2010 02:14:12 +0100</pubDate>
	<guid>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/lua/Testing%20/lunit</guid>
</item>
<item>
	<title>Shake</title>
	<link>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/lua/Testing%20/shake</link>
	<description><![CDATA[<p>
<p>Shake 是一個簡單的 Lua 測試引擎，它假設測試只用到 assert() 與 Print() 呼叫。如果你在尋找像 JUnit 一樣的東西，請改用 lunit 或 luaunit。Shake 的執行需要仰賴 Leg 與 LPeg。</p>
<p>平台: Cross-platform; 原始碼授權類型: MIT/X Consortium License</p>
<p>資料來源: <a href="https://luaforge.net/projects/shake/" target="_blank">https://luaforge.net/projects/shake/</a></p>
</p>]]></description>
	<author>dio</author>
	<pubDate>Fri, 17 Sep 2010 02:13:25 +0100</pubDate>
	<guid>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/lua/Testing%20/shake</guid>
</item>
<item>
	<title>LuaJIT</title>
	<link>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/lua/Compiler/luajit</link>
	<description><![CDATA[<p>
<p>LuaJIT 是一個 Lua 的 Just-In-Time (JIT) 編譯器。它與標準的 Lua 5.1 相容並且為你的 Lua 程式提供可觀的效能改善。LuaJIT 是 MIT/X 授權下的 OpenSource 軟體。LuaJIT 支援各種普及的 x86 作業系統 (Linux, Windows, OSX 等)。它也可以以32位元應用程式的形式在64位元機器上執行。</p>
<p>平台: Cross-platform; 原始碼授權類型: MIT/X License</p>
<p>資料來源:<a href="https://www.ditii.com/2010/01/21/luajit-just-in-time-jit-compiler-for-lua-dynamic-language/" target="_blank"> https://www.ditii.com/2010/01/21/luajit-just-in-time-jit-compiler-for-lua-dynamic-language/</a></p>
</p>]]></description>
	<author>dio</author>
	<pubDate>Fri, 17 Sep 2010 02:12:46 +0100</pubDate>
	<guid>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/lua/Compiler/luajit</guid>
</item>
<item>
	<title>LLVM-Lua</title>
	<link>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/lua/Compiler/llvm-lua</link>
	<description><![CDATA[<p>
<p>LLVM-Lua 是一個靜態的 JIT 編譯器，它使用 Low Level Virtual Machine (LLVM) 為它的編譯器後端。</p>
<p>平台: Cross-platform; 原始碼授權類型: MIT License</p>
<p>資料來源: <a href="https://code.google.com/p/llvm-lua/" target="_blank">https://code.google.com/p/llvm-lua/</a></p>
</p>]]></description>
	<author>dio</author>
	<pubDate>Fri, 17 Sep 2010 02:12:12 +0100</pubDate>
	<guid>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/lua/Compiler/llvm-lua</guid>
</item>
<item>
	<title>luac</title>
	<link>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/lua/Compiler/luac</link>
	<description><![CDATA[<p>
<p>luac 是標準的 Lua 編譯器。它可以將以 Lua 程式語言撰寫的程式轉換成二進位檔案，這些檔案可以被 C 的 lua_dofile 或 Lua 的 dofile 載入並執行。</p>
<p>平台: Cross-platform; 原始碼授權類型: MIT License</p>
<p>資料來源: <a href="https://www.lua.org/manual/4.0/luac.html" target="_blank">https://www.lua.org/manual/4.0/luac.html</a></p>
</p>]]></description>
	<author>dio</author>
	<pubDate>Fri, 17 Sep 2010 02:11:14 +0100</pubDate>
	<guid>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/lua/Compiler/luac</guid>
</item>
<item>
	<title>LuaDec</title>
	<link>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/lua/Compiler/luadec</link>
	<description><![CDATA[<p>
<p>LuaDec for Lua 是 Lua 反編譯器。</p>
<p>它是基於 Hisham Muhammad 的 luadec</p>
<p>LuaDec51 是免費軟體並且與原本的 LuaDec 使用同樣的授權類型。</p>
<p>平台:  Windows NT/2000; 原始碼授權類型: MIT License</p>
<p>資料來源: https://luadec51.luaforge.net/</p>
</p>]]></description>
	<author>dio</author>
	<pubDate>Fri, 17 Sep 2010 02:10:26 +0100</pubDate>
	<guid>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/lua/Compiler/luadec</guid>
</item>
<item>
	<title>Lua for Windows</title>
	<link>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/lua/Debugger-Editor/lua-for-windows-</link>
	<description><![CDATA[<p>
<p>Lua for Windows (LfW) 將 Lua binary、 Lua libraries 與 Lua 編輯器整合為一個給 Windows 作業系統的組件。LfW 包含所有在 Windows 上寫 Lua 腳本需要的工具，包括各種 library 與可以在 Windows 上執行的範例。LfW 可以在 Windows 2000 或更新版本的 Windows 作業系統上執行。因為 Lua 以及其 libraries 也提供在其他作業系統上，所以大部分的腳本都可以跨平台。</p>
<p>平台: Windows; 原始碼授權類型: MIT License</p>
<p>資料來源: <a href="https://code.google.com/p/luaforwindows/" target="_blank">https://code.google.com/p/luaforwindows/</a></p>
</p>]]></description>
	<author>dio</author>
	<pubDate>Fri, 17 Sep 2010 02:09:02 +0100</pubDate>
	<guid>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/lua/Debugger-Editor/lua-for-windows-</guid>
</item>
</channel>
</rss>
