<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:mtree="http://www.mosets.com/tree/rss/">
<channel>
<title>OpenFoundry - Recently Added Listings - 測試</title>
<description></description>
<link>https://www.openfoundry.org/</link>
<lastBuildDate>Fri, 22 Nov 2019 08:40:25 +0100</lastBuildDate>
<generator>FeedCreator 1.7.3</generator>
<item>
	<title>Flex Mock</title>
	<link>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/ruby/Testing/flex-mock</link>
	<description><![CDATA[<p>Flex Mock is a simple, but flexible, mock object library for Ruby unit testing.</p>
<p>Platform:unknown ; License:MIT/X Consortium License</p>
<p>References:<a href="https://flexmock.rubyforge.org/" target="_blank">https://flexmock.rubyforge.org/</a></p>]]></description>
	<author>dio</author>
	<pubDate>Tue, 07 Sep 2010 19:10:39 +0100</pubDate>
	<guid>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/ruby/Testing/flex-mock</guid>
</item>
<item>
	<title>Watir</title>
	<link>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/ruby/Testing/watir</link>
	<description><![CDATA[<p>Watir, pronounced water, is an open-source (BSD) library for automating web browsers. It allows you to write tests that are easy to read and maintain. It is simple and flexible.</p>
<p>Watir drives browsers the same way people do. It clicks links, fills in forms, presses buttons. Watir also checks results, such as whether expected text appears on the page.<br />Watir is a family of Ruby libraries but it supports your app no matter what technology it is developed in. Like other programming languages, Ruby gives you the power to connect to databases, read data files and spreadsheets, export XML, and structure your code as reusable libraries. Unlike other programming languages, Ruby is concise and often a joy to read.<br />Platform:Cross Platform ; License:unknown<br />Reference:<a href="https://watir.com/" target="_blank">https://watir.com/</a></p>]]></description>
	<author>dio</author>
	<pubDate>Tue, 07 Sep 2010 03:04:15 +0100</pubDate>
	<guid>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/ruby/Testing/watir</guid>
</item>
<item>
	<title>Uttk</title>
	<link>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/ruby/Testing/uttk</link>
	<description><![CDATA[<p>Uttk is a unified and extensible framework for dynamic testing. It is designed to support any test strategy. It understands YAML and Ruby as input languages (test description), YAML, XML and HTML as output languages (test results).</p>
<p>Platform:OS Independent; License:GNU Lesser General Public License(LGPL)</p>
<p>References:<a href="https://rubyforge.org/projects/ttk" target="_blank">https://rubyforge.org/projects/ttk</a></p>]]></description>
	<author>dio</author>
	<pubDate>Mon, 06 Sep 2010 19:18:06 +0100</pubDate>
	<guid>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/ruby/Testing/uttk</guid>
</item>
<item>
	<title>Mocha</title>
	<link>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/ruby/Testing/mocha</link>
	<description><![CDATA[<p>Mocha is a library for mocking and stubbing using a syntax like that of JMock. It can be used with many testing frameworks e.g. Test::Unit, RSpec, test/spec, expectations, Dust, MiniTest and even JtestR. It also provides a unified, simple and readable syntax for both traditional mocking and partial mocking.</p>
<p>Platform:unknown ;License:MIT/X Consortium License, Ruby License</p>
<p>References:<a href="https://mocha.rubyforge.org/" target="_blank">https://mocha.rubyforge.org/</a></p>]]></description>
	<author>dio</author>
	<pubDate>Mon, 06 Sep 2010 19:16:46 +0100</pubDate>
	<guid>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/ruby/Testing/mocha</guid>
</item>
<item>
	<title>Rfuzz</title>
	<link>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/ruby/Testing/rfuzz</link>
	<description><![CDATA[<p>Rfuzz is a Ruby library to easily test web applications from the outside using a fast HttpClient and wicked evil RandomGenerator allowing the average programmer to use advanced fuzzing techniques for just pennies a day.</p>
<p>Features:</p>
<p>A full ultra fast and light HTTP client based on the Mongrel core.</p>
<p>A fast ArcFour based RandomGenerator that feeds your applications more garbage than an army of freegans eats in a day.</p>
<p>A small DSL (Domain Specific Language) for running test Sessions and gathering statistics about the test.</p>
<p>Integration with RSpec for organizing and running tests.</p>
<p>Platform:unknown ; License:unknown</p>
<p>References:<a href="https://rfuzz.rubyforge.org/" target="_blank">https://rfuzz.rubyforge.org/</a></p>]]></description>
	<author>dio</author>
	<pubDate>Mon, 06 Sep 2010 19:09:17 +0100</pubDate>
	<guid>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/ruby/Testing/rfuzz</guid>
</item>
<item>
	<title>Rubicon</title>
	<link>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/ruby/Testing/rubicon</link>
	<description><![CDATA[<p>Rubicon provides test cases for the core Ruby language and for the built-in classes. We try to track the evolution of Ruby as it is implicitly specified by the implementation of the language.</p>
<p>Platform:Cross-platform ; License:Ruby License</p>
<p>References:<a href="https://rubytests.rubyforge.org/" target="_blank">https://rubytests.rubyforge.org/</a></p>]]></description>
	<author>dio</author>
	<pubDate>Mon, 06 Sep 2010 19:07:58 +0100</pubDate>
	<guid>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/ruby/Testing/rubicon</guid>
</item>
<item>
	<title>FunFX</title>
	<link>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/ruby/Testing/funfx</link>
	<description><![CDATA[<p>FunFX is open-source and uses Ruby to write tests. Ruby is a simple but yet powerful language, which makes it possible to write tests that are easy to understand. Ruby was  due to its DOM capabilities and the fact that it is a scripting language.</p>
<p>Platform:Windows ; License:MIT/X Consortium License<br />Reference:<a href="https://funfx.rubyforge.org/" target="_blank">https://funfx.rubyforge.org/</a></p>]]></description>
	<author>dio</author>
	<pubDate>Mon, 06 Sep 2010 19:06:21 +0100</pubDate>
	<guid>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/ruby/Testing/funfx</guid>
</item>
</channel>
</rss>
