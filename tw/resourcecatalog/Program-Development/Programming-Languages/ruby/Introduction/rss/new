<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:mtree="http://www.mosets.com/tree/rss/">
<channel>
<title>OpenFoundry - Recently Added Listings - 介紹</title>
<description></description>
<link>https://www.openfoundry.org/</link>
<lastBuildDate>Fri, 22 Nov 2019 08:40:21 +0100</lastBuildDate>
<generator>FeedCreator 1.7.3</generator>
<item>
	<title>Ruby</title>
	<link>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/ruby/Introduction/ruby</link>
	<description><![CDATA[<p>
<p>Ruby是一個注重均衡的語言. 它的發明者, 松本行弘 Yukihiro “matz” Matsumoto, 混合了他喜歡的語言 (如 Perl, Smalltalk, Eiffel, Ada, and Lisp) 產生了一個具有函數式與指令式程式設計語言特性的新語言。他常說他是： “試著讓 Ruby 更為自然，而不是簡單”，就像生活一樣。</p>
<p>在 Ruby 中，所有的東西都是個物件。所有的資訊與程式碼都可以給與他們所擁有的 屬性(properties) 與 行為(actions) 。物件導向程式設計中稱屬性為 實體變數(instance variables) 而行為稱為 方法(methods)。Ruby 的必要部份也可以隨意地被移除或重新定義。已存在的部份也可以被繼續添加內容。Ruby 試著不去限制程式設計人員。</p>
<p>Ruby 還具有以下的特點：</p>
<p>Ruby 具有 例外處理(exception handling) 的能力。就如 Java 或 Python 一樣，可以讓使用者輕鬆的處理錯誤狀況。</p>
<p>Ruby 對於所有的物件具有一個真正的 標記-清除(mark and sweep) 式的垃圾收集器(garbage collector)。使用者不必去維護擴充函式庫中的 參考計數器(reference counts)。如 Matz說的：”這樣有益健康”。</p>
<p>在 Ruby 中撰寫 C 的擴充程式比在 Perl 或 Python 中方便，它擁有許多方便的 API 可以讓 C 呼叫 Ruby。這樣可以將 Ruby 當成 script language 嵌入到其他軟體之中。它也具有 SWIG 的呼叫界面。</p>
<p>如果作業系統支援，Ruby 可以動態的載入擴充函式庫。</p>
<p>資料來源:<a href="https://www.ruby-lang.org/zh_TW/about/" target="_blank">https://www.ruby-lang.org/zh_TW/about/</a></p>
</p>]]></description>
	<author>dio</author>
	<pubDate>Mon, 27 Sep 2010 08:39:48 +0100</pubDate>
	<guid>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/ruby/Introduction/ruby</guid>
</item>
</channel>
</rss>
