<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:mtree="http://www.mosets.com/tree/rss/">
<channel>
<title>OpenFoundry - Recently Added Listings - Ruby</title>
<description></description>
<link>https://www.openfoundry.org/</link>
<lastBuildDate>Fri, 22 Nov 2019 02:14:59 +0100</lastBuildDate>
<generator>FeedCreator 1.7.3</generator>
<item>
	<title>ruhoh</title>
	<link>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/ruby/Web-framework/ruhoh</link>
	<description><![CDATA[繼&nbsp;<a href="https://www.openfoundry.org/en/resourcecatalog/Program-Development/Programming-Languages/ruby/Web-framework/nanoc">nanoc</a>、&nbsp;<a href="https://www.openfoundry.org/resourcecatalog/Program-Development/Programming-Languages/python/Web-framework/jemdoc">jemdoc</a>&nbsp;之後，ruhoh又是一款用來管理生成靜態網頁的工具。 ruhoh 標榜它是一個部落格平台，而且是唯一一個有語言-無關 API 的工具。它的目標族群是程式軟體開發人員，所以操作都是使用指令行 ( comment line )， 但是因為它提供很好的指令界面, 因此其實並不會很難上手。&nbsp;<br />ruhoh&nbsp;的架構是非常彈性的。透過套件的架構設計，使用者可以自己依照需求修改套件或是新編套件。從編排、編譯器到語法分析都可以依照使用者自己的喜愛編輯。而 ruhoh 所謂語言無關指的是只要透過它的規範，無論用的是什麼程式語言，都可以作出 ruhoh 套件。此外，在顧及功能面的同時， ruhoh 也試著兼顧到對網頁設計的支援。 ruhoh 能夠根據設計風格做到各個設定元素有不同命名空間的設計。]]></description>
	<author>webmaster</author>
	<pubDate>Tue, 11 Sep 2012 16:46:56 +0100</pubDate>
	<guid>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/ruby/Web-framework/ruhoh</guid>
</item>
<item>
	<title>nanoc</title>
	<link>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/ruby/Web-framework/nanoc</link>
	<description><![CDATA[nanoc 是一個用 Ruby 實現的靜態網頁產生工具。 從它的官方網站，nanoc 標榜自己是一個給中到小型網站的 Ruby網頁系統。<wbr>nanoc 是一個非常彈性的工具。它讓管理靜態網頁非常的方便，而且還可以用不同的語法來編輯內容。透過不同的 Ruby工具，nanoc 可以再編譯成 HTML、CSS 格式。 因為這樣的設計，nanoc 產生出來的內容可以非常輕易的發佈到伺服器上而無需多安裝套件在伺服<wbr>器上，或煩惱相容性的問題。 </wbr></wbr>]]></description>
	<author>webmaster</author>
	<pubDate>Mon, 09 Apr 2012 23:48:24 +0100</pubDate>
	<guid>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/ruby/Web-framework/nanoc</guid>
</item>
<item>
	<title>Ruby</title>
	<link>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/ruby/Introduction/ruby</link>
	<description><![CDATA[<p>
<p>Ruby是一個注重均衡的語言. 它的發明者, 松本行弘 Yukihiro “matz” Matsumoto, 混合了他喜歡的語言 (如 Perl, Smalltalk, Eiffel, Ada, and Lisp) 產生了一個具有函數式與指令式程式設計語言特性的新語言。他常說他是： “試著讓 Ruby 更為自然，而不是簡單”，就像生活一樣。</p>
<p>在 Ruby 中，所有的東西都是個物件。所有的資訊與程式碼都可以給與他們所擁有的 屬性(properties) 與 行為(actions) 。物件導向程式設計中稱屬性為 實體變數(instance variables) 而行為稱為 方法(methods)。Ruby 的必要部份也可以隨意地被移除或重新定義。已存在的部份也可以被繼續添加內容。Ruby 試著不去限制程式設計人員。</p>
<p>Ruby 還具有以下的特點：</p>
<p>Ruby 具有 例外處理(exception handling) 的能力。就如 Java 或 Python 一樣，可以讓使用者輕鬆的處理錯誤狀況。</p>
<p>Ruby 對於所有的物件具有一個真正的 標記-清除(mark and sweep) 式的垃圾收集器(garbage collector)。使用者不必去維護擴充函式庫中的 參考計數器(reference counts)。如 Matz說的：”這樣有益健康”。</p>
<p>在 Ruby 中撰寫 C 的擴充程式比在 Perl 或 Python 中方便，它擁有許多方便的 API 可以讓 C 呼叫 Ruby。這樣可以將 Ruby 當成 script language 嵌入到其他軟體之中。它也具有 SWIG 的呼叫界面。</p>
<p>如果作業系統支援，Ruby 可以動態的載入擴充函式庫。</p>
<p>資料來源:<a href="https://www.ruby-lang.org/zh_TW/about/" target="_blank">https://www.ruby-lang.org/zh_TW/about/</a></p>
</p>]]></description>
	<author>dio</author>
	<pubDate>Mon, 27 Sep 2010 08:39:48 +0100</pubDate>
	<guid>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/ruby/Introduction/ruby</guid>
</item>
<item>
	<title>Flex Mock</title>
	<link>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/ruby/Testing/flex-mock</link>
	<description><![CDATA[<p>Flex Mock is a simple, but flexible, mock object library for Ruby unit testing.</p>
<p>Platform:unknown ; License:MIT/X Consortium License</p>
<p>References:<a href="https://flexmock.rubyforge.org/" target="_blank">https://flexmock.rubyforge.org/</a></p>]]></description>
	<author>dio</author>
	<pubDate>Tue, 07 Sep 2010 19:10:39 +0100</pubDate>
	<guid>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/ruby/Testing/flex-mock</guid>
</item>
<item>
	<title>Arcadia</title>
	<link>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/ruby/Integrated%20Development%20Environment/arcadia</link>
	<description><![CDATA[<p>
<p>Arcadia 是一個輕量級的Ruby語言的整合開發環境，採用Ruby語言編寫，使用的是 Tcl/Tk GUI工具包。主要的功能包括cide編輯、源文件瀏覽、語法highlight、code自動完成等，可以運行在裝有 Ruby 和 Tcl-Tk 的平台上，具有高可擴展性架構，支持快速的 GUI 應用開發。</p>
<p>平台:跨平台;授權類型:Ruby License</p>
<p>資料來源:<a href="https://tech.ddvip.com/2010-04/1271039645150440.html" target="_blank">https://tech.ddvip.com/2010-04/1271039645150440.html</a></p>
</p>]]></description>
	<author>dio</author>
	<pubDate>Tue, 07 Sep 2010 18:29:54 +0100</pubDate>
	<guid>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/ruby/Integrated%20Development%20Environment/arcadia</guid>
</item>
<item>
	<title>Watir</title>
	<link>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/ruby/Testing/watir</link>
	<description><![CDATA[<p>Watir, pronounced water, is an open-source (BSD) library for automating web browsers. It allows you to write tests that are easy to read and maintain. It is simple and flexible.</p>
<p>Watir drives browsers the same way people do. It clicks links, fills in forms, presses buttons. Watir also checks results, such as whether expected text appears on the page.<br />Watir is a family of Ruby libraries but it supports your app no matter what technology it is developed in. Like other programming languages, Ruby gives you the power to connect to databases, read data files and spreadsheets, export XML, and structure your code as reusable libraries. Unlike other programming languages, Ruby is concise and often a joy to read.<br />Platform:Cross Platform ; License:unknown<br />Reference:<a href="https://watir.com/" target="_blank">https://watir.com/</a></p>]]></description>
	<author>dio</author>
	<pubDate>Tue, 07 Sep 2010 03:04:15 +0100</pubDate>
	<guid>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/ruby/Testing/watir</guid>
</item>
<item>
	<title>RDE(Ruby Development Environment)</title>
	<link>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/ruby/Integrated%20Development%20Environment/rderuby-development-environment</link>
	<description><![CDATA[<p>RDE is a Ruby IDE and editor on Windows. RDE is more light and quick than other IDEs. RDE is the GUI wrapper of debug.rb and editor. You can edit, run and debug your scripts by GUI interface.<br />Features:</p>
<p>Use RDE like a favorite Editor.<br />Do execute ruby scripts from editor without saving files and get the result without dos console. <br />Write scripts easily with HTML Help link, Input support features.<br />Edit the editing text with ruby on RDE.<br />Debug the scripts on RDE.<br />Platform: Windows ; License:no<br />Reference:<a href="https://homepage2.nifty.com/sakazuki/rde_en/index.html" target="_blank">https://homepage2.nifty.com/sakazuki/rde_en/index.html</a></p>]]></description>
	<author>dio</author>
	<pubDate>Tue, 07 Sep 2010 02:42:50 +0100</pubDate>
	<guid>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/ruby/Integrated%20Development%20Environment/rderuby-development-environment</guid>
</item>
<item>
	<title>RubyScript2Exe</title>
	<link>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/ruby/Compiler/rubyscript2exe</link>
	<description><![CDATA[<p>
<p>RubyScript2Exe transforms your Ruby application into a standalone, compressed Windows, Linux or Mac OS X (Darwin) executable. You can look at it as a "compiler". Not in the sense of a source-code-to-byte-code compiler, but as a "collector", for it collects all necessary files to run your application on an other machine: the Ruby application,the Ruby interpreter and the Ruby runtime library (stripped down for your application). Anyway, the result is the same: a standalone executable (application.exe).And that's what we want!</p>
<p>Platform:Cross Platform(Windows,Linux,Mac);License:GNU General Public License (GPL) version 2</p>
<p>References:<a href="https://rubyforge.org/projects/rubyscript2exe/" target="_blank">https://rubyforge.org/projects/rubyscript2exe/</a></p>
</p>]]></description>
	<author>dio</author>
	<pubDate>Mon, 06 Sep 2010 19:41:40 +0100</pubDate>
	<guid>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/ruby/Compiler/rubyscript2exe</guid>
</item>
<item>
	<title>Uttk</title>
	<link>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/ruby/Testing/uttk</link>
	<description><![CDATA[<p>Uttk is a unified and extensible framework for dynamic testing. It is designed to support any test strategy. It understands YAML and Ruby as input languages (test description), YAML, XML and HTML as output languages (test results).</p>
<p>Platform:OS Independent; License:GNU Lesser General Public License(LGPL)</p>
<p>References:<a href="https://rubyforge.org/projects/ttk" target="_blank">https://rubyforge.org/projects/ttk</a></p>]]></description>
	<author>dio</author>
	<pubDate>Mon, 06 Sep 2010 19:18:06 +0100</pubDate>
	<guid>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/ruby/Testing/uttk</guid>
</item>
<item>
	<title>Mocha</title>
	<link>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/ruby/Testing/mocha</link>
	<description><![CDATA[<p>Mocha is a library for mocking and stubbing using a syntax like that of JMock. It can be used with many testing frameworks e.g. Test::Unit, RSpec, test/spec, expectations, Dust, MiniTest and even JtestR. It also provides a unified, simple and readable syntax for both traditional mocking and partial mocking.</p>
<p>Platform:unknown ;License:MIT/X Consortium License, Ruby License</p>
<p>References:<a href="https://mocha.rubyforge.org/" target="_blank">https://mocha.rubyforge.org/</a></p>]]></description>
	<author>dio</author>
	<pubDate>Mon, 06 Sep 2010 19:16:46 +0100</pubDate>
	<guid>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/ruby/Testing/mocha</guid>
</item>
</channel>
</rss>
