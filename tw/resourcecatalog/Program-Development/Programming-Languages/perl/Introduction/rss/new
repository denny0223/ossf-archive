<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:mtree="http://www.mosets.com/tree/rss/">
<channel>
<title>OpenFoundry - Recently Added Listings - 介紹</title>
<description></description>
<link>https://www.openfoundry.org/</link>
<lastBuildDate>Fri, 22 Nov 2019 08:40:33 +0100</lastBuildDate>
<generator>FeedCreator 1.7.3</generator>
<item>
	<title>perl.com</title>
	<link>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/perl/Introduction/perl</link>
	<description><![CDATA[<p>
<p>Perl是一種高階、通用、直譯式、動態的程式語言。最初設計者Larry Wall為了讓在UNIX上進行報表處理的工作變得更方便，決定開發一個通用的腳本語言，而在1987年12月18日發表。</p>
<p>Perl借取了C、sed、awk、shell scripting以及很多其他程式語言的特性。其中最重要的特性是他內部整合了正規表式的功能，以及巨大的第三方代碼函式庫CPAN。目前Larry Wall已經開發Perl 6，來作為Perl的後繼。</p>
<p>因為Larry Wall本人也是一個語言學家，他設計Perl語言時使用了很多語言學的思維。相比C、Pascal這樣的「高階」語言而言，Perl語言直接提供泛型變數、動態陣列、Hash表等更加便捷的編程元素。Perl具有動態語言的強大靈活的特性，並且還從C/C++、Basic、Pascal等語言中分別借鑑了語法規則，從而提供了許多冗餘語法。使得程式設計師可以忽略電腦內部資料儲存、型式、處理方法、運算規則、甚至內部記憶體越界等等的細節，而將思考中心放在所需要的程式邏輯上。就這一點而言，很多Perl程式設計師認為目前只有Perl、Python等泛型語言才能稱為「高階」語言，而C、Pascal甚至C++這些只能稱為「中高階」語言而已。可以說，在統一變數型式和掩蓋運算細節方面，Perl做得比Python更為出色。</p>
<p>由於從其他語言大量借鑑了語法，使得從其他程式語言轉到Perl語言的程式設計師可以迅速上手寫程式並完成任務，這使得Perl語言是一門容易用的語言。但問題是這樣寫出來的「類xx語言」的Perl程式對不熟悉這種語言的程式設計師卻如同天書，這使得Perl語言易寫不易讀。</p>
<p>平台:Cross platform                        原始碼授權類型:GNU General Public License, Artistic License</p>
<p>資料來源:<a href="https://zh.wikipedia.org/zh-tw/Perl" target="_blank">https://zh.wikipedia.org/zh-tw/Perl</a></p>
</p>]]></description>
	<author>dio</author>
	<pubDate>Wed, 27 Feb 2008 15:17:03 +0100</pubDate>
	<guid>https://www.openfoundry.org/tw/resourcecatalog/Program-Development/Programming-Languages/perl/Introduction/perl</guid>
</item>
</channel>
</rss>
