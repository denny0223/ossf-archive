<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:mtree="http://www.mosets.com/tree/rss/">
<channel>
<title>OpenFoundry - Recently Added Listings - Web Service</title>
<description></description>
<link>https://www.openfoundry.org/</link>
<lastBuildDate>Fri, 22 Nov 2019 03:02:26 +0100</lastBuildDate>
<generator>FeedCreator 1.7.3</generator>
<item>
	<title>GeoMondrian</title>
	<link>https://www.openfoundry.org/tw/resourcecatalog/GIS/Geospatial-Open-Source-Project/Web-Service/geomondrian</link>
	<description><![CDATA[<strong>GeoMondrian</strong> is a "spatially-enabled" version of Mondrian. GeoMondrian brings to the Mondrian OLAP server what PostGIS brings to the PostgreSQL DBMS, i.e. a consistent and powerful support for geospatial data. It also provides geo-extensions to MDX.<br /><br /><strong>License</strong>：EPL]]></description>
	<author>webmaster</author>
	<pubDate>Mon, 26 Mar 2012 02:19:14 +0100</pubDate>
	<guid>https://www.openfoundry.org/tw/resourcecatalog/GIS/Geospatial-Open-Source-Project/Web-Service/geomondrian</guid>
</item>
<item>
	<title>ZOO Project</title>
	<link>https://www.openfoundry.org/tw/resourcecatalog/GIS/Geospatial-Open-Source-Project/Web-Service/zoo-project</link>
	<description><![CDATA[<strong> ZOO</strong> is a WPS (Web Processing Service) open source project released under a MIT/X-11 style license . It provides an OGC WPS compliant developer-friendly framework to create and chain WPS Web services. ZOO is made of three parts: <br /><br />
<ul>
<li><a href="https://zoo-project.org/site/ZooWebSite/ZooKernel">ZOO Kernel</a> : A powerful server-side C Kernel which makes it possible to manage and chain Web services coded in different programming languages.</li>
<li><a href="https://zoo-project.org/site/ZooWebSite/ZooServices/Introduction">ZOO Services</a> : A growing suite of example Web services based on various Open Source libraries. (get inspired !)</li>
<li><a href="https://zoo-project.org/site/ZooWebSite/ZOOAPI/Introduction">ZOO API</a> : A server-side JavaScript API able to call and chain the ZOO Services, which makes the development and chaining processes easier.</li>
</ul>
<p><strong>License</strong>： MIT/X-11</p>]]></description>
	<author>webmaster</author>
	<pubDate>Fri, 23 Mar 2012 08:35:11 +0100</pubDate>
	<guid>https://www.openfoundry.org/tw/resourcecatalog/GIS/Geospatial-Open-Source-Project/Web-Service/zoo-project</guid>
</item>
<item>
	<title>52°North WSS</title>
	<link>https://www.openfoundry.org/tw/resourcecatalog/GIS/Geospatial-Open-Source-Project/Web-Service/52dnorth-wss</link>
	<description><![CDATA[The <strong>52North Web Security Service (WSS)</strong> lets you easily restrict access to spatial services and their resources using role-based permissions.<br /><br /> With 52North WSS you can define access policies like:<br /><br /><em>All users in role ‘external’ are allowed to access just layers A and B of the WMS with GetMap.</em><br />or<em><br />GetFeatureInfo is only allowed on layer A in a specific area defined by a bounding box.</em><br /><br />The 52North WSS is a Java Web Application which usually runs in a Apache Tomcat Servlet container. It acts as a proxy for an arbitrary number of OGC Web Services, receiving all requests and acting upon the defined policies. Thus, existing service implementations don’t need to be changed. Policies and users are defined in XML configuration files, which are maintained from a general management interface.<br /><br /><strong>License</strong>：GPL-2.0<br /><span style="color: #808080;"><em><span style="color: #808080;"><em>The project description quoted above is licensed by <a href="https://live.osgeo.org/en/overview/52nWSS_overview.html"><span style="text-decoration: underline;"><span style="color: #808080; text-decoration: underline;">OSGeo</span></span></a> under a <span style="text-decoration: underline;"><a href="https://creativecommons.org/licenses/by/3.0/"><span style="color: #808080; text-decoration: underline;">Creative Commons Attribution 3.0 Unported License</span></a></span>。</em></span></em></span>]]></description>
	<author>webmaster</author>
	<pubDate>Fri, 23 Mar 2012 08:05:19 +0100</pubDate>
	<guid>https://www.openfoundry.org/tw/resourcecatalog/GIS/Geospatial-Open-Source-Project/Web-Service/52dnorth-wss</guid>
</item>
<item>
	<title>MapProxy</title>
	<link>https://www.openfoundry.org/tw/resourcecatalog/GIS/Geospatial-Open-Source-Project/Web-Service/mapproxy</link>
	<description><![CDATA[<strong>MapProxy</strong> speeds up mapping applications by pre-rendering and integrating maps from multiple sources and storing in a local cache. Layers can be made transparent, projections can be changed, multiple map layers can be transformed into one, watermarks can be added, and more...<br /><br /> MapProxy is flexible and scales from simple to complex use-cases: from a single tile cache for an OpenLayers web client to a central SDI node that combines, unifies and accelerates dozens of distributed WMS services.<br /><br /> MapProxy is used for the German broadband atlas to deliver maps for thousands of users and the German Federal Agency for Cartography an Geodesy uses MapProxy to aggregate WMS services from all 16 states on the fly.<br /><br /><strong>License</strong>： Apache-2.0<br /><span style="color: #808080;"><em><span style="color: #808080;"><em>The project description quoted above is licensed by <a href="https://live.osgeo.org/en/overview/mapproxy_overview.html"><span style="text-decoration: underline;"><span style="color: #808080; text-decoration: underline;">OSGeo</span></span></a> under a <span style="text-decoration: underline;"><a href="https://creativecommons.org/licenses/by/3.0/"><span style="color: #808080; text-decoration: underline;">Creative Commons Attribution 3.0 Unported License</span></a></span>。</em></span></em></span>]]></description>
	<author>webmaster</author>
	<pubDate>Fri, 23 Mar 2012 07:58:22 +0100</pubDate>
	<guid>https://www.openfoundry.org/tw/resourcecatalog/GIS/Geospatial-Open-Source-Project/Web-Service/mapproxy</guid>
</item>
<item>
	<title>GeoNetwork</title>
	<link>https://www.openfoundry.org/tw/resourcecatalog/GIS/Geospatial-Open-Source-Project/Web-Service/geonetwork</link>
	<description><![CDATA[<strong>GeoNetwork</strong> is a catalog application to manage spatially referenced resources. It provides powerful metadata editing and search functions as well as an embedded interactive web map viewer. It is currently used in numerous Spatial Data Infrastructure initiatives across the world.<br /><br />GeoNetwork has been developed to connect spatial information communities and their data using a modern architecture, which is at the same time powerful and low cost, based on the principles of Free and Open Source Software (FOSS) and International and Open Standards for services and protocols (a.o. from ISO/TC211 and OGC).<br /><br /> The software provides an easy to use web interface to search geospatial data across multiple catalogs, combine distributed map services in the embedded map viewer, publish geospatial data using the online metadata editing tools and optionally the embedded GeoServer map server. Administrators have the option to manage user and group accounts, configure the server through web based and desktop utilities and schedule metadata harvesting from other catalogs.<br /><br /><strong>License</strong>：GPL-2.0]]></description>
	<author>webmaster</author>
	<pubDate>Fri, 23 Mar 2012 07:51:19 +0100</pubDate>
	<guid>https://www.openfoundry.org/tw/resourcecatalog/GIS/Geospatial-Open-Source-Project/Web-Service/geonetwork</guid>
</item>
<item>
	<title>52°North SOS</title>
	<link>https://www.openfoundry.org/tw/resourcecatalog/GIS/Geospatial-Open-Source-Project/Web-Service/52dnorth-sos</link>
	<description><![CDATA[The <strong><span class="externalLink"> Sensor Observation Service</span></strong> aggregates readings from live, in-situ and remote sensors. The service provides an interface to make sensors and sensor data archives accessible via an interoperable web based interface. Four profiles are defined within the SOS specification: core, transactional, enhanced, and entire.<br /><br /><strong>License</strong>：GPL-2.0]]></description>
	<author>webmaster</author>
	<pubDate>Fri, 23 Mar 2012 00:13:37 +0100</pubDate>
	<guid>https://www.openfoundry.org/tw/resourcecatalog/GIS/Geospatial-Open-Source-Project/Web-Service/52dnorth-sos</guid>
</item>
<item>
	<title>52°North WPS</title>
	<link>https://www.openfoundry.org/tw/resourcecatalog/GIS/Geospatial-Open-Source-Project/Web-Service/52dnorth-wps</link>
	<description><![CDATA[The <strong>52°North Web Processing Servic</strong>e enables the deployment of geo-processes on the web in a standardized way. It features a pluggable architecture for processes and data encodings. The implementation is based on the current OpenGIS specification: 05-007r7 .<br /><br /><strong>Licence:</strong> GPL]]></description>
	<author>webmaster</author>
	<pubDate>Fri, 23 Mar 2012 00:08:02 +0100</pubDate>
	<guid>https://www.openfoundry.org/tw/resourcecatalog/GIS/Geospatial-Open-Source-Project/Web-Service/52dnorth-wps</guid>
</item>
<item>
	<title>QGIS Server</title>
	<link>https://www.openfoundry.org/tw/resourcecatalog/GIS/Geospatial-Open-Source-Project/Web-Service/qgis-server</link>
	<description><![CDATA[<strong>QGIS Server</strong> provides a web map service (WMS) using the same libraries as the Quantum GIS (QGIS) desktop application. Maps and print templates created in QGIS desktop can be published as web maps simply by copying the QGIS project file into the server directory. The resulting web maps look exactly the same as in the desktop. QGIS Server is usually run as CGI/FastCGI module within the Apache Webserver.<br /><br /><b>License</b>：GPL-2.0]]></description>
	<author>webmaster</author>
	<pubDate>Fri, 23 Mar 2012 00:02:28 +0100</pubDate>
	<guid>https://www.openfoundry.org/tw/resourcecatalog/GIS/Geospatial-Open-Source-Project/Web-Service/qgis-server</guid>
</item>
<item>
	<title>pycsw</title>
	<link>https://www.openfoundry.org/tw/resourcecatalog/GIS/Geospatial-Open-Source-Project/Web-Service/pycsw</link>
	<description><![CDATA[<strong>pycsw</strong> is an OGC CSW server implementation written in <span class="reference external">Python</span>.<br /><br /> pycsw implements clause 10 (HTTP protocol binding (Catalogue Services for the Web, CSW)) of the <a class="reference external" href="https://www.opengeospatial.org/standards/cat">OpenGIS Catalogue Service Implementation Specification</a>, version 2.0.2. Initial development started in 2010 (more formally announced in <span class="reference external">2011</span>).<br /><br /> pycsw allows for the publishing and discovery of geospatial metadata. Existing repositories of geospatial metadata can be exposed via OGC:CSW 2.0.2.<br /><br /> pycsw is <span class="reference external">Open Source</span>, released under an MIT <em></em><span class="reference internal">license</span>, and runs on all major platforms (Windows, Linux, Mac OS X).<br /><br /><strong>License</strong>：MIT]]></description>
	<author>webmaster</author>
	<pubDate>Thu, 22 Mar 2012 23:55:32 +0100</pubDate>
	<guid>https://www.openfoundry.org/tw/resourcecatalog/GIS/Geospatial-Open-Source-Project/Web-Service/pycsw</guid>
</item>
<item>
	<title>MapBuilder</title>
	<link>https://www.openfoundry.org/tw/resourcecatalog/GIS/Geospatial-Open-Source-Project/Web-Service/mapbuilder</link>
	<description><![CDATA[<strong>MapBuilder</strong> is&nbsp;a powerful, standards compliant geographic mapping client which runs in a web browser.<br />
<ul>
<li>Browser based mapping client</li>
<li>Excels at transforming and rendering XML documents (like GML, Context etc) using XSLT in the browser.</li>
<li>Standards compliant, supports multiple <a href="https://www.opengeospatial.org/" class="external-link" rel="nofollow">Open Geospatial Consortium</a>(OGC) standards</li>
<li>Renders maps from Web Map Services (WMS), Web Feature Services (WFS), GeoRSS, Google Maps</li>
<li>Supports editing map features to Transactional Web Feature Services (WFS-T)</li>
<li>Allows users to build their own maps, then save and share them, using Web Map Context (WMC) and Open Web Services Context</li>
</ul>
<ul>
<li>Easy to use</li>
</ul>
<ul>
<li>Fast and interactive - built using&nbsp; <a href="https://adaptivepath.com/publications/essays/archives/000385.php" class="external-link" rel="nofollow">AJAX </a></li>
<li>Works with most modern browsers (Firefox 1.0+, Internet Explorer 6.0+, Mozilla 1.3+)</li>
<li>Customisable and easy to extend</li>
</ul>
<br /><strong>License</strong>：LGPL-2.1]]></description>
	<author>webmaster</author>
	<pubDate>Wed, 21 Mar 2012 10:42:30 +0100</pubDate>
	<guid>https://www.openfoundry.org/tw/resourcecatalog/GIS/Geospatial-Open-Source-Project/Web-Service/mapbuilder</guid>
</item>
</channel>
</rss>
